#!/bin/bash
# $Id$
#
# chkconfig: - 91 09
# description: Starts and stops the virtual ip address

### BEGIN INIT INFO
# Provides: lsb-vipple
# Required-Start: $local_fs $network $remote_fs
# Required-Stop: $local_fs $network $remote_fs
# Default-Start:
# Default-Stop: 0 1 6
# Short-Description: start and stop the virtual ip address
# Description: simple virtual ip address handler
### END INIT INFO

# Source function library.
. /etc/init.d/functions

# Source networking configuration.
. /etc/sysconfig/network

# Check that networking is up.
[ ${NETWORKING} = "no" ] && exit 0

get_files() {
  local FILE
  cd ${CONFDIR}
  for FILE in vip-[0-9][0-9][0-9].conf; do
    case "${FILE}" in
    vip-common.conf)
      continue
      ;;
    *)
      ;;
    esac
    echo ${FILE}
  done
}

prog=$"simple virtual ip address handler"
LOGGER="/usr/bin/logger -p daemon.notice -t vipple"
CONFDIR=/etc/vipple

common_proc() {
  local blk="$(cat)"

  for FILE in $(get_files); do
    TMP_RETVAL=0
    unset ID BIND_INTERFACE VIP_ADDRESS OPTIONS UPSCRIPT DOWNSCRIPT PREFIX BROADCAST

    [[ -f ${CONFDIR}/vip-common.conf ]] && . ${CONFDIR}/vip-common.conf
    . ${CONFDIR}/${FILE}

    [[ -n "${BIND_INTERFACE}" ]] || TMP_RETVAL=1
    [[ -n "${VIP_ADDRESS}"    ]] || TMP_RETVAL=1

    # If one of more of the above failed, skip the daemon launch
    if [[ ${TMP_RETVAL} -ne 0 ]]; then
      VIP_RETVAL=1
      continue
    fi

    eval "${blk}"
  done
}

start() {
  RETVAL=-1
  VIP_RETVAL=0

  echo -n $"Starting ${prog}: "
  common_proc <<'EOS'
    RETVAL=0

    /bin/ping -q -c 3 ${VIP_ADDRESS} && RETVAL=1
    if [ ${RETVAL} -eq 0 ]; then
      /sbin/ip addr add ${VIP_ADDRESS}/${PREFIX:-32} dev ${BIND_INTERFACE} $([[ -n "${BROADCAST}" ]] && echo broadcast ${BROADCAST})
      LAUNCH_RETVAL=$?
      [[ ${LAUNCH_RETVAL} -ne 0 ]] && RETVAL=1

      /sbin/arping -q -A -I ${BIND_INTERFACE} -c 1 ${VIP_ADDRESS}

      [[ -x "${UPSCRIPT}" ]] && {
        ${UPSCRIPT} || RETVAL=1
      }
    fi
EOS

  # failure/success or warning if launch worked with some vip errors
  if [ ${RETVAL} -eq 0 -a ${VIP_RETVAL} -eq 0 ]; then
    ${LOGGER} "all vipple configurations were applied successfully"
    success
    touch /var/lock/subsys/vipple
  elif [ ${RETVAL} -eq 0 -a ${VIP_RETVAL} -eq 1 ]; then
    ${LOGGER} "error in one or more of the vipple configurations"
    warning
  else
    ${LOGGER} "error running one or more of the vipple instances"
    failure
  fi

  echo
}

stop() {
  echo -n $"Stopping $prog: "
  common_proc <<'EOS'
    RETVAL=0

    [[ -x "${DOWNSCRIPT}" ]] && {
      ${DOWNSCRIPT} || RETVAL=1
    }

    /sbin/ip addr del ${VIP_ADDRESS}/${PREFIX:-32} dev ${BIND_INTERFACE} $([[ -n "${BROADCAST}" ]] && echo broadcast ${BROADCAST})
    LAUNCH_RETVAL=$?
    [[ ${LAUNCH_RETVAL} -ne 0 ]] && RETVAL=1
EOS

  # failure/success (no warning, too complicated to handle properly)
  if [ ${RETVAL} -eq 1 ]; then
    ${LOGGER} "it seems like no vipple were running"
    failure
  else
    ${LOGGER} "all IP addresses unassigned"
    success
    rm -f /var/lock/subsys/vipple
  fi

  echo
}

status() {
  common_proc <<'EOS'
    /sbin/ip addr show ${BIND_INTERFACE}
EOS
}

case "$1" in
start)
  start
  ;;
stop)
  stop
  ;;
restart)
  stop
  start
  ;;
status)
  status
  ;;
*)
  echo $"Usage: $0 {start|stop|restart|status}"
  exit 1
esac

exit $RETVAL
